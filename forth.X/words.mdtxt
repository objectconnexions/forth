
* Words


** `@`  addr -- n

Read the memory/register at the address and place its value on the stack.


** `!` n addr --

Write the value to the memory/register at the address.


** `DUP`  n1 -- n1 n1

Duplicate value on top of stack


** `DROP`  n1 --

Remove number for top of stack


** `TUCK`  n1 n2 -- n2 n1 n2

Duplicate value on top of stack placing it underneath the next-on-stack value.

